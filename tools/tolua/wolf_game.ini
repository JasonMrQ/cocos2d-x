[wolf_game]
# the prefix to be added to the generated functions. You might or might not use this in your own
# templates
prefix = wolf_game

# create a target namespace (in javascript, this would create some code like the equiv. to `ns = ns || {}`)
# all classes will be embedded in that namespace
target_namespace = 

android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/%(gnu_libstdc_version)s/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/%(gnu_libstdc_version)s/include
android_flags = -D_SIZE_T_DEFINED_ 

clang_headers = -I%(clangllvmdir)s/%(clang_lib_version)s/clang/%(clang_version)s/include
clang_flags = -nostdinc -x c++ -std=c++11 -U __SSE__

cocos_headers = -I%(cocosdir)s/cocos -I%(cocosdir)s/cocos/editor-support -I%(cocosdir)s/cocos/platform/android -I%(cocosdir)s/external -I%(cocosdir)s/external/lua/luajit/include -I%(cocosdir)s/external/lua/tolua

cocos_flags = -DANDROID

cxxgenerator_headers = 

# wolf_headers = -I%(cocosdir)s/../runtime-src/Classes -I%(cocosdir)s/../runtime-src/Classes/game -I%(cocosdir)s/../runtime-src/Classes/extra -I%(cocosdir)s/../runtime-src/Classes/extra/live2d/framework -I%(cocosdir)s/../runtime-src/Classes/extra/live2d/include
wolf_headers = -I%(real_root)s/frameworks/runtime-src/Classes -I%(real_root)s/frameworks/runtime-src/Classes/extensions -I%(real_root)s/frameworks/runtime-src/Classes/extensions/live2d/framework -I%(real_root)s/frameworks/runtime-src/Classes/extensions/live2d/include -I%(real_root)s/../runtime-src/Classes/game -I%(real_root)s/../runtime-src/Classes/game/platform

# extra arguments for clang
extra_arguments = %(android_headers)s %(clang_headers)s %(cxxgenerator_headers)s %(cocos_headers)s %(android_flags)s %(clang_flags)s %(cocos_flags)s %(extra_flags)s %(wolf_headers)s 

# what headers to parse
# headers = %(cocosdir)s/../runtime-src/Classes/game/utils/PbcHelper.h %(cocosdir)s/../runtime-src/Classes/game/platform/NativeHelpers.h %(cocosdir)s/../runtime-src/Classes/game/utils/ContentManager.h %(cocosdir)s/../runtime-src/Classes/game/utils/Helpers.h %(cocosdir)s/../runtime-src/Classes/extra/live2d/Live2DNode.h %(cocosdir)s/../runtime-src/Classes/extra/gdxparticle/GdxParticle.h %(cocosdir)s/../runtime-src/Classes/game/platform/SdkHelpers.h
headers = %(real_root)s/frameworks/runtime-src/Classes/extensions/live2d/Live2DNode.h %(real_root)s/frameworks/runtime-src/Classes/extensions/gdxparticle/GdxParticle.h %(real_root)s/frameworks/runtime-src/Classes/extensions/pbc/PbcHelper.h %(real_root)s/frameworks/runtime-src/Classes/game/platform/SdkHelpers.h %(real_root)s/frameworks/runtime-src/Classes/game/platform/NativeHelpers.h %(real_root)s/frameworks/runtime-src/Classes/game/utils/Helpers.h %(real_root)s/frameworks/runtime-src/Classes/game/utils/UdbNetClient.hpp %(real_root)s/frameworks/runtime-src/Classes/game/utils/UdbManager.hpp

# what classes to produce code for. You can use regular expressions here. When testing the regular
# expression, it will be enclosed in "^$", like this: "^Menu*$".
# classes = PbcHelper ContentManager Helpers NativeHelpers Live2DNode CGdxParticle SdkHelpers
classes = Live2DNode CGdxParticle PbcHelper NativeHelpers SdkHelpers Helpers UdbNetClient UdbManager

# what should we skip? in the format ClassName::[function function]
# ClassName is a regular expression, but will be used like this: "^ClassName$" functions are also
# regular expressions, they will not be surrounded by "^$". If you want to skip a whole class, just
# add a single "*" as functions. See bellow for several examples. A special class name is "*", which
# will apply to all class names. This is a convenience wildcard to be able to skip similar named
# functions from all classes.

# skip = Live2DNode::[say],
#         CGdxParticle::[setCompleteCallFunc],
#         SdkHelpers::[init login updateCreateRoleInfoWith updateRoleInfoWith pay logout exit channelType enterUserCenter enterCustomerCenter showToolBar hideToolBar getConfigValue],
#         NativeHelpers::[UnEncodeData getEncodeNewName checkAddSoundMap addSoundMap UnpackZipToDir]
skip = Live2DNode::[say],
        CGdxParticle::[setCompleteCallFunc],
        SdkHelpers::[init login updateCreateRoleInfoWith updateRoleInfoWith pay logout exit channelType enterUserCenter enterCustomerCenter showToolBar hideToolBar getConfigValue],
        NativeHelpers::[UnEncodeData getEncodeNewName checkAddSoundMap addSoundMap UnpackZipToDir],
        UdbNetClient::[registerClose registerRecv]



rename_functions = 

rename_classes = 

# for all class names, should we remove something when registering in the target VM?
remove_prefix = 

# classes for which there will be no "parent" lookup
classes_have_no_parents = 

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip =

# classes that create no constructor
# Set is special and we will use a hand-written constructor
abstract_classes = 

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = no

